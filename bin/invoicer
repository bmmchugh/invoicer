#!ruby -w

ROOT_PATH = File.join(File.dirname(__FILE__), '..')
$LOAD_PATH << File.join(ROOT_PATH, 'lib')

require 'thor'
require 'hours'
require 'bar-of-progress'

class Invoicer < Thor

  desc 'create_invoice SPREADSHEET', 'Creates a new invoice for CONTACT_ID and adds line items from SPREADSHEET.'
  def create_invoice(spreadsheet)
    #puts "#{contact_id}, #{spreadsheet}"
    template_id = LineItemReader.get_template_id(spreadsheet)
    contact_id = LineItemReader.get_contact_id(spreadsheet)
    invoice = new_invoice(contact_id, template_id)
    create_line_items(invoice.id, spreadsheet)
    puts "Finished creating Invoice #{invoice.id} -- #{invoice.reference_name_number}"
  end

  desc 'client', 'Prints client information.'
  def client()
    puts Client.load(593517).inspect
  end

  desc 'new_invoice CONTACT_ID, TEMPLATE_ID', 'Create a new invoice for CONTACT_ID with TEMPLATE_ID'
  def new_invoice(contact_id, template_id = nil)
    invoice = Invoice.new
    unless contact_id.empty?
      invoice.contact_id = contact_id
    end
    unless template_id.empty?
      invoice.proposal_template_id = template_id
    end
    invoice.save()
    puts "Created invoice #{invoice.id} -- #{invoice.reference_name_number}"
    invoice
  end

  desc "create_line_items INVOICE_ID, SPREADSHEET", "Create line items on INVOICE_ID from SPREADSHEET"
  def create_line_items(invoice_id, spreadsheet)
    line_count = File.read(spreadsheet).lines.count
    line_item_count = line_count - 5
    puts "Adding #{line_item_count} line items to invoice #{invoice_id}"
    bar = BarOfProgress.new(:total => line_item_count)
    print bar.progress

    count = 0
    LineItemReader.read(spreadsheet) do |line_item|
      line_item.proposal_id = invoice_id
      line_item.save()
      count += 1
      print "\r"
      print bar.progress(count)
      #puts "Added line item #{line_item.id} -- #{line_item.line}, #{line_item.quantity}, #{line_item.unit_price}, #{line_item.additional_description}"
    end
    puts ""
  end

end

Invoicer.start(ARGV)
